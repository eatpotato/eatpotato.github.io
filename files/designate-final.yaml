heat_template_version: 2013-05-23

description: Simple template to deploy designate

parameters:
  key_name:
    type: string
    default: xue-test
    description: Name of key-pair to be used for compute instance
  image_id:
    type: string
    default: designate
    description: Image to be used for compute instance
  instance_type:
    type: string
    default: 2C4G
    description: Type of instance (flavor) to be used
  secgroup_name:
    type: string
    default: default
    description: Default security group
  password:
    type: string
    default: test
    description: admin password
  service_passwd:
    type: string
    default: test
    description: service password
  network_id:
    type: string
    default: 84138634-80a3-434a-9f14-e7584225d3d6
    description: network id

resources:
  
  dns_secgroup:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
          port_range_min: 53
          port_range_max: 53
        - protocol: udp
          remote_ip_prefix: 0.0.0.0/0
          port_range_min: 53
          port_range_max: 53 

  designate-slave:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: key_name }
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      name: designate-slave
      networks:
        - network: { get_param: network_id }
      security_groups:
        - default
        - { get_resource: dns_secgroup }
      user_data:
        str_replace:
          params:
            $password: { get_param: password }
          template: |
            #!/bin/bash
            #set root password
            echo "Setting  password to  " $password
            echo $password |passwd --stdin root
            #bind
            cp /etc/named.conf /etc/named.conf.orig
            sed -i "/listen-on port.*/d" /etc/named.conf
            cat > /etc/rndc.key << EOF
            key "rndc-key" {
            algorithm hmac-md5;
            secret "T6hE+NB2XS4MuWpOktY58w==";
            };
            EOF
            export ip_address=$(ifconfig eth0 | grep -w inet | awk '{print $2}')
            export ip_address_suffix="$(ifconfig eth0 | grep inet -w | awk '{print $2}' | cut -d . -f 1-3)/24"
            cat >/etc/named.conf<<EOF
            include "/etc/rndc.key";
            controls {
                    inet $ip_address port 953 allow { 127.0.0.1; $ip_address; $ip_address_suffix; } keys { "rndc-key"; };
            };
            options {
            allow-new-zones yes;
            allow-query { any; };
            recursion yes;
            listen-on-v6 port 53 { ::1; };
            directory       "/var/named";
            dump-file       "/var/named/data/cache_dump.db";
            statistics-file "/var/named/data/named_stats.txt";
            memstatistics-file "/var/named/data/named_mem_stats.txt";
            allow-transfer { $ip_address; 127.0.0.1; $ip_address_suffix; };
            dnssec-enable yes;
            dnssec-validation yes;
            bindkeys-file "/etc/named.iscdlv.key";
            managed-keys-directory "/var/named/dynamic";
            pid-file "/run/named/named.pid";
            session-keyfile "/run/named/session.key";
            };
            logging {
            channel default_debug {
            file "data/named.run";
            severity dynamic;
            };
            };
            zone "." IN {
            type hint;
            file "named.ca";
            };
            include "/etc/named.rfc1912.zones";
            include "/etc/named.root.key";
            EOF
            cat >/etc/rndc.conf<<EOF
            include "/etc/rndc.key";
            options{
            default-key "rndc-key";
            default-server $ip_address;
            default-port 953;
            };
            EOF
            named-checkconf /etc/named.conf
            setsebool -P named_write_master_zones on
            chmod g+w /var/named
            chown named:named /etc/rndc.conf
            chown named:named /etc/rndc.key
            chmod 600 /etc/rndc.key
            systemctl restart named

  designate-master:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: key_name }
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      name: designate-master
      networks:
        - network: { get_param: network_id }
      security_groups:
        - default
        - { get_resource: dns_secgroup }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            #set root password
            echo "Setting  password to  " $password           
            echo $password |passwd --stdin root
            #install mysql and rabbitmq
            export hostname_value=$(hostname)
            cat >>/etc/hosts <<EOF
            127.0.0.1 $hostname_value
            EOF
            systemctl enable mariadb.service rabbitmq-server.service
            systemctl start mariadb.service rabbitmq-server.service
            rabbitmqctl add_user openstack $service_passwd
            rabbitmqctl set_permissions openstack ".*" ".*" ".*"
            #mysql create keystone user and database
            mysqladmin -u root password $service_passwd
            cat << EOF | mysql -u root --password=$service_passwd
            CREATE DATABASE keystone;
            GRANT ALL PRIVILEGES ON keystone.* TO "keystone"@"localhost"
            IDENTIFIED BY "$service_passwd";
            GRANT ALL PRIVILEGES ON keystone.* TO "keystone"@"%"
            IDENTIFIED BY "$service_passwd";
            FLUSH PRIVILEGES;
            quit
            EOF
            #keystone configuration
            sed -i "/^\[DEFAULT\].*/a admin_token = $service_passwd" /etc/keystone/keystone.conf
            sed -i "/^\[database\].*/a connection = mysql+pymysql://keystone:$service_passwd@localhost/keystone" /etc/keystone/keystone.conf
            sed -i "/^\[token\].*/a provider = fernet" /etc/keystone/keystone.conf
            su -s /bin/sh -c "keystone-manage db_sync" keystone
            keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone
            sed -i "/.*ServerName www.*/a ServerName localhost" /etc/httpd/conf/httpd.conf
            cat > /etc/httpd/conf.d/wsgi-keystone.conf <<EOF
            Listen 5000
            Listen 35357
            <VirtualHost *:5000>
                WSGIDaemonProcess keystone-public processes=5 threads=1 user=keystone group=keystone display-name=%{GROUP}
                WSGIProcessGroup keystone-public
                WSGIScriptAlias / /usr/bin/keystone-wsgi-public
                WSGIApplicationGroup %{GLOBAL}
                WSGIPassAuthorization On
                ErrorLogFormat "%{cu}t %M"
                ErrorLog /var/log/httpd/keystone-error.log
                CustomLog /var/log/httpd/keystone-access.log combined
                <Directory /usr/bin>
                    Require all granted
                </Directory>
            </VirtualHost>
            <VirtualHost *:35357>
                WSGIDaemonProcess keystone-admin processes=5 threads=1 user=keystone group=keystone display-name=%{GROUP}
                WSGIProcessGroup keystone-admin
                WSGIScriptAlias / /usr/bin/keystone-wsgi-admin
                WSGIApplicationGroup %{GLOBAL}
                WSGIPassAuthorization On
                ErrorLogFormat "%{cu}t %M"
                ErrorLog /var/log/httpd/keystone-error.log
                CustomLog /var/log/httpd/keystone-access.log combined
                <Directory /usr/bin>
                    Require all granted
                </Directory>
            </VirtualHost>
            EOF
            setenforce 0
            systemctl stop firewalld
            systemctl enable httpd.service
            systemctl start httpd.service
            #create domain and user
            export OS_TOKEN=$service_passwd
            export OS_URL=http://localhost:35357/v3
            export OS_IDENTITY_API_VERSION=3
            openstack service create --name keystone --description "OpenStack Identity" identity
            openstack endpoint create --region RegionOne identity public http://localhost:5000/v3
            openstack endpoint create --region RegionOne identity internal http://localhost:5000/v3
            openstack endpoint create --region RegionOne identity admin http://localhost:35357/v3
            openstack domain create --description "Default Domain" default
            openstack project create --domain default --description "Admin Project" services
            openstack user create --domain default --password $service_passwd admin
            openstack role create admin
            openstack role add --project services --user admin admin
            cat >/root/openrc << EOF
            export OS_PROJECT_DOMAIN_NAME=default
            export OS_USER_DOMAIN_NAME=default
            export OS_PROJECT_NAME=services
            export OS_USERNAME=admin
            export OS_PASSWORD=$service_passwd
            export OS_AUTH_URL=http://localhost:35357/v3
            export OS_IDENTITY_API_VERSION=3
            export OS_IMAGE_API_VERSION=2
            EOF
            #install and configure designate
            cat << EOF | mysql -u root --password=$service_passwd
            CREATE DATABASE designate;
            GRANT ALL PRIVILEGES ON designate.* TO "designate"@"localhost"
            IDENTIFIED BY "$service_passwd";
            GRANT ALL PRIVILEGES ON designate.* TO "designate"@"%"
            IDENTIFIED BY "$service_passwd";
            CREATE DATABASE designate_pool_manager;
            GRANT ALL PRIVILEGES ON designate_pool_manager.* TO "designate"@"localhost"
            IDENTIFIED BY "$service_passwd";
            GRANT ALL PRIVILEGES ON designate_pool_manager.* TO "desigante"@"%"
            IDENTIFIED BY "$service_passwd";
            FLUSH PRIVILEGES;
            quit
            EOF
            source /root/openrc
            openstack user create --domain default --password $service_passwd designate
            openstack role add --project services --user designate admin
            openstack service create --name designate \
            --description "OpenStack DNS service" dns
            openstack endpoint create --region RegionOne \
            dns public http://localhost:9001
            openstack endpoint create --region RegionOne \
            dns internal http://localhost:9001
            openstack endpoint create --region RegionOne \
            dns admin http://localhost:9001
            cat > /etc/designate/designate.conf << EOF
            [DEFAULT]
            verbose = True
            debug = False
            [oslo_messaging_rabbit]
            rabbit_userid = openstack
            rabbit_password = $service_passwd
            rabbit_ha_queues = False
            rabbit_host = 127.0.0.1
            rabbit_port =5672
            rabbit_virtual_host = /
            rabbit_hosts = 127.0.0.1:5672
            [service:central]
            [service:api]
            auth_strategy = noauth
            enable_api_v1 = True
            enabled_extensions_v1 = diagnostics, quotas, reports, sync, touch
            enable_api_v2 = True
            enabled_extensions_v2 = quotas, reports
            [keystone_authtoken]
            auth_url = http://127.0.0.1:35357
            auth_url = http://127.0.0.1:5000
            auth_type = password
            auth_protocol = http
            project_domain_name = default
            user_domain_name = default
            project_name = services
            username = designate
            password = $service_passwd
            [cors]
            [cors.subdomain]
            [service:sink]
            [service:mdns]
            threads = 1000
            host = 0.0.0.0
            port = 5354
            tcp_backlog = 100
            tcp_recv_timeout = 0.5
            query_enforce_tsig = False
            [service:agent]
            [service:zone_manager]
            [zone_manager_task:domain_purge]
            [zone_manager_task:delayed_notify]
            [service:pool_manager]
            pool_id = 794ccc2c-d751-44fe-b57f-8894c9f5c842
            [pool_manager_cache:sqlalchemy]
            connection = mysql://designate:$service_passwd@localhost/designate_pool_manager
            max_retries = -1
            [pool_manager_cache:memcache]
            [pool:794ccc2c-d751-44fe-b57f-8894c9f5c842]
            nameservers = 0f66b842-96c2-4189-93fc-1dc95a08b012
            targets = f26e0b32-736f-4f0a-831b-039a415c481e
            [pool_nameserver:0f66b842-96c2-4189-93fc-1dc95a08b012]
            port = 53
            host = 127.0.0.1
            [pool_target:f26e0b32-736f-4f0a-831b-039a415c481e]
            options = rndc_host: 127.0.0.1, rndc_port: 953, rndc_config_file: /etc/rndc.conf, rndc_key_file: /etc/rndc.key
            masters = 127.0.0.1:5354
            type = bind9
            [network_api:neutron]
            [storage:sqlalchemy]
            connection = mysql://designate:$service_passwd@localhost/designate
            max_retries = -1
            [handler:nova_fixed]
            [handler:neutron_floatingip]
            [backend:agent:bind9]
            [backend:agent:denominator]
            [oslo_concurrency]
            [coordination]
            EOF
            designate-manage database sync
            designate-manage pool-manager-cache sync
            systemctl enable designate-central designate-api designate-mdns designate-pool-manager
            systemctl start designate-central designate-api designate-mdns designate-pool-manager
            #install and configure bind
            cp /etc/named.conf /etc/named.conf.orig
            sed -i "/listen-on port.*/d" /etc/named.conf
            cat > /etc/rndc.key << EOF
            key "rndc-key" {
            algorithm hmac-md5;
            secret "T6hE+NB2XS4MuWpOktY58w==";
            };
            EOF
            export ip_address=$(ifconfig eth0 | grep -w inet | awk '{print $2}')
            cat >/etc/named.conf<<EOF
            include "/etc/rndc.key";
            controls {
                    inet 127.0.0.1 port 953 allow { 127.0.0.1; $ip_address; $slave_ip_address; } keys { "rndc-key"; };
            };
            options {
            allow-new-zones yes;
            allow-query { any; };
            recursion yes;
            listen-on-v6 port 53 { ::1; };
            directory       "/var/named";
            dump-file       "/var/named/data/cache_dump.db";
            statistics-file "/var/named/data/named_stats.txt";
            memstatistics-file "/var/named/data/named_mem_stats.txt";
            allow-transfer { $ip_address; 127.0.0.1; $slave_ip_address; };
            dnssec-enable yes;
            dnssec-validation yes;
            bindkeys-file "/etc/named.iscdlv.key";
            managed-keys-directory "/var/named/dynamic";
            pid-file "/run/named/named.pid";
            session-keyfile "/run/named/session.key";
            };
            logging {
            channel default_debug {
            file "data/named.run";
            severity dynamic;
            };
            };
            zone "." IN {
            type hint;
            file "named.ca";
            };
            include "/etc/named.rfc1912.zones";
            include "/etc/named.root.key";
            EOF
            cat >/etc/rndc.conf<<EOF
            include "/etc/rndc.key";
            options{
            default-key "rndc-key";
            default-server 127.0.0.1;
            default-port 953;
            };
            EOF
            named-checkconf /etc/named.conf
            setsebool -P named_write_master_zones on
            chmod g+w /var/named
            chown named:named /etc/rndc.conf
            chown named:named /etc/rndc.key
            chmod 600 /etc/rndc.key
            systemctl restart named
            cat >/etc/designate/pools.yaml<<EOF
            - also_notifies:
              - host: $ip_address
                port: 53
              - host: $slave_ip_address
                port: 53
              attributes: {}
              description: Pool built from configuration on localhost
              id: 794ccc2c-d751-44fe-b57f-8894c9f5c842
              nameservers:
              - host: $ip_address
                port: 53
              - host: $slave_ip_address
                port: 53
              ns_records:
              - hostname: dns-master.haihangyun.com.
                priority: 1
              - hostname: dns-slave.haihangyun.com.
                priority: 2
              targets:
              - masters:
                - host: $ip_address
                  port: 5354
                options:
                  rndc_config_file: /etc/rndc.conf
                  rndc_host: 127.0.0.1
                  rndc_key_file: /etc/rndc.key
                  rndc_port: '953'
                type: bind9
              - masters:
                - host: $ip_address
                  port: 5354
                options:
                  rndc_config_file: /etc/rndc.conf
                  rndc_host: $slave_ip_address
                  rndc_key_file: /etc/rndc.ley
                  rndc_port: '953'
                type: bind9
            EOF
            systemctl restart designate-api
            systemctl restart designate-central
            systemctl restart designate-mdns
            systemctl restart designate-pool-manager
            designate-manage pool update
            if [ $? -eq 0 ]; then !!; fi
            systemctl restart designate-central
            systemctl restart designate-mdns
            systemctl restart designate-pool-manager
            designate-manage pool update
          params:
            $password: { get_param: password }
            $service_passwd: { get_param: service_passwd }
            $slave_ip_address: {get_attr: [designate-slave, first_address]}
